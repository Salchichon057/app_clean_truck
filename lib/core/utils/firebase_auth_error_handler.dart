import 'package:firebase_auth/firebase_auth.dart';

class FirebaseAuthErrorHandler {
  static String getErrorMessage(FirebaseAuthException e) {
    switch (e.code) {
      // Errores de registro
      case 'email-already-in-use':
        return 'Este correo electr√≥nico ya est√° registrado. Intenta iniciar sesi√≥n o usa otro correo.';
      case 'weak-password':
        return 'La contrase√±a es muy d√©bil. Debe tener al menos 6 caracteres.';
      case 'invalid-email':
        return 'El formato del correo electr√≥nico no es v√°lido.';
      case 'operation-not-allowed':
        return 'El registro con correo y contrase√±a no est√° habilitado.';
      
      // Errores de inicio de sesi√≥n
      case 'user-not-found':
        return 'No existe una cuenta con este correo electr√≥nico.';
      case 'wrong-password':
        return 'La contrase√±a es incorrecta.';
      case 'user-disabled':
        return 'Esta cuenta ha sido deshabilitada.';
      case 'invalid-credential':
        return 'Las credenciales proporcionadas son incorrectas o han expirado.';
      
      // Errores de red y conexi√≥n
      case 'network-request-failed':
        return 'Error de conexi√≥n. Verifica tu conexi√≥n a internet e int√©ntalo de nuevo.';
      case 'too-many-requests':
        return 'Demasiados intentos fallidos. Espera un momento antes de intentar de nuevo.';
      
      // Errores de contrase√±a
      case 'requires-recent-login':
        return 'Por seguridad, necesitas iniciar sesi√≥n nuevamente para realizar esta acci√≥n.';
      
      // Errores de verificaci√≥n
      case 'invalid-verification-code':
        return 'El c√≥digo de verificaci√≥n es inv√°lido.';
      case 'invalid-verification-id':
        return 'El ID de verificaci√≥n es inv√°lido.';
      case 'session-expired':
        return 'La sesi√≥n ha expirado. Inicia sesi√≥n nuevamente.';
      
      // Errores de cuenta
      case 'account-exists-with-different-credential':
        return 'Ya existe una cuenta con este correo pero con un m√©todo de inicio de sesi√≥n diferente.';
      case 'credential-already-in-use':
        return 'Esta credencial ya est√° asociada a otra cuenta.';
      
      // Errores de configuraci√≥n
      case 'app-not-authorized':
        return 'La aplicaci√≥n no est√° autorizada para usar Firebase Authentication.';
      case 'keychain-error':
        return 'Error en el almac√©n de credenciales del dispositivo.';
      
      // Errores de token
      case 'invalid-custom-token':
        return 'El token personalizado es inv√°lido.';
      case 'custom-token-mismatch':
        return 'El token personalizado no coincide con la configuraci√≥n.';
      
      // Errores de usuario
      case 'missing-email':
        return 'Debes proporcionar un correo electr√≥nico.';
      case 'missing-password':
        return 'Debes proporcionar una contrase√±a.';
      case 'email-change-needs-verification':
        return 'Necesitas verificar tu nuevo correo electr√≥nico.';
      
      // Errores de l√≠mites
      case 'quota-exceeded':
        return 'Se ha excedido la cuota de uso. Int√©ntalo m√°s tarde.';
      case 'project-not-found':
        return 'El proyecto de Firebase no fue encontrado.';
      
      // Errores espec√≠ficos de plataforma
      case 'web-storage-unsupported':
        return 'El almacenamiento web no es compatible con este navegador.';
      case 'web-context-already-presented':
        return 'Ya hay una operaci√≥n de autenticaci√≥n en progreso.';
      case 'web-context-cancelled':
        return 'La operaci√≥n de autenticaci√≥n fue cancelada.';
      
      // Errores de terceros (Google, Facebook, etc.)
      case 'popup-blocked':
        return 'El popup fue bloqueado por el navegador. Permite popups para esta p√°gina.';
      case 'popup-closed-by-user':
        return 'El popup fue cerrado antes de completar la autenticaci√≥n.';
      case 'unauthorized-domain':
        return 'El dominio no est√° autorizado para operaciones OAuth.';
      
      // Error gen√©rico
      default:
        return 'Ha ocurrido un error inesperado: ${e.message ?? 'Error desconocido'}';
    }
  }

  /// Obtiene el t√≠tulo para mostrar en di√°logos seg√∫n el tipo de error
  static String getErrorTitle(FirebaseAuthException e) {
    switch (e.code) {
      case 'email-already-in-use':
        return 'Correo ya registrado';
      case 'weak-password':
        return 'Contrase√±a muy d√©bil';
      case 'invalid-email':
        return 'Correo inv√°lido';
      case 'user-not-found':
      case 'wrong-password':
      case 'invalid-credential':
        return 'Error de inicio de sesi√≥n';
      case 'network-request-failed':
        return 'Error de conexi√≥n';
      case 'too-many-requests':
        return 'Demasiados intentos';
      case 'user-disabled':
        return 'Cuenta deshabilitada';
      default:
        return 'Error de autenticaci√≥n';
    }
  }

  /// Determina si el error permite reintentar la operaci√≥n
  static bool canRetry(FirebaseAuthException e) {
    switch (e.code) {
      case 'network-request-failed':
      case 'too-many-requests':
      case 'quota-exceeded':
        return true;
      case 'email-already-in-use':
      case 'weak-password':
      case 'invalid-email':
      case 'user-disabled':
      case 'operation-not-allowed':
        return false;
      default:
        return true;
    }
  }

  /// Obtiene el √≠cono apropiado para mostrar seg√∫n el error
  static String getErrorIcon(FirebaseAuthException e) {
    switch (e.code) {
      case 'email-already-in-use':
        return 'üìß';
      case 'weak-password':
        return 'üîí';
      case 'invalid-email':
        return '‚ùå';
      case 'user-not-found':
      case 'wrong-password':
        return 'üîê';
      case 'network-request-failed':
        return 'üåê';
      case 'too-many-requests':
        return '‚è±Ô∏è';
      case 'user-disabled':
        return 'üö´';
      default:
        return '‚ö†Ô∏è';
    }
  }
}